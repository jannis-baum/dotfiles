; todo
; - fix dG yG cG by disabling cancel

{
  :profiles {
    :goku {:default true
           :alone   300  ; hold for .. ms to register single tap
           :held    50  ; not sure what it's for
           :delay   0   ; time after which the key press is delayed
           :sim     50} ; keys need to be pressed within this threshold to be considered simultaneous
  }
  :templates {:open "open -a \"%s.app\""
              :delay-set-var "sleep 0.1 && /Library/Application\\ Support/org.pqrs/Karabiner-Elements/bin/karabiner_cli --set-variables '{\"%s\": %d}'"}
  :applications {:native-vim ["^com\\.googlecode\\.iterm2$", "^com\\.microsoft\\.VSCode$", "^com\\.apple\\.dt\\.Xcode$", "^net\\.kovidgoyal\\.kitty$"]
                 :kitty ["^net\\.kovidgoyal\\.kitty$"]
                 :iterm ["^com\\.googlecode\\.iterm2$"]
                 :vscode ["^com\\.microsoft\\.VSCode$"]
                 :safari ["^com\\.apple\\.Safari$"]}
  :main [
    {:des "lshift > kitty"
     :rules [[:condis ["layer_prim" 0] ["layer_prim_1_held" 0]]
                 [:left_shift "open -a kitty" [:!kitty]]
                 [:left_shift "~/.bin/hide-kitty" [:kitty]]
            ]}
    {:des "primary layer: numchar",
     :rules [
                 [:right_command ["layer_prim_1_held" 1] nil {:afterup [["layer_prim_1_held" 0]] :alone [:spacebar]}]
                 [:right_shift [["layer_prim_1_held" 1] ["layer_prim" 1]] nil {:afterup [["layer_prim_1_held" 0] [:delay-set-var "layer_prim" 0]]}]
                 [:condis ["layer_prim_1_held" 1]]
                     [:tab :tab] [:q :7] [:w :8] [:e :9] [:r :!S1] [:t :!S2] [:y :!S3] [:u :!S8] [:i :open_bracket] [:o :close_bracket] [:p :!Sequal_sign] [:open_bracket :delete_or_backspace]
                     [:a :4] [:s :5] [:d :6] [:f :!Sbackslash] [:g :backslash] [:h :!S5] [:j :hyphen] [:k :!S9] [:l :!S0] [:semicolon :equal_sign] [:quote :grave_accent_and_tilde]
                     [:left_shift :0] [:z :1] [:x :2] [:c :3] [:v :!S6] [:b :!S4] [:n :!S7] [:m :!Shyphen] [:comma :!Sopen_bracket] [:period :!Sclose_bracket] [:slash :!Sgrave_accent_and_tilde] [:return_or_enter :return_or_enter]
                 [:condis ["layer_prim" 1]]
                     [:tab [:tab ["layer_prim" 0]]] [:q [:7 ["layer_prim" 0]]] [:w [:8 ["layer_prim" 0]]] [:e [:9 ["layer_prim" 0]]] [:r [:!S1 ["layer_prim" 0]]] [:t [:!S2 ["layer_prim" 0]]] [:y [:!S3 ["layer_prim" 0]]] [:u [:!S8 ["layer_prim" 0]]] [:i [:open_bracket ["layer_prim" 0]]] [:o [:close_bracket ["layer_prim" 0]]] [:p [:!Sequal_sign ["layer_prim" 0]]] [:open_bracket [:delete_or_backspace ["layer_prim" 0]]]
                     [:a [:4 ["layer_prim" 0]]] [:s [:5 ["layer_prim" 0]]] [:d [:6 ["layer_prim" 0]]] [:f [:!Sbackslash ["layer_prim" 0]]] [:g [:backslash ["layer_prim" 0]]] [:h [:!S5 ["layer_prim" 0]]] [:j [:hyphen ["layer_prim" 0]]] [:k [:!S9 ["layer_prim" 0]]] [:l [:!S0 ["layer_prim" 0]]] [:semicolon [:equal_sign ["layer_prim" 0]]] [:quote [:grave_accent_and_tilde ["layer_prim" 0]]]
                     [:left_shift [:0 ["layer_prim" 0]]][:z [:1 ["layer_prim" 0]]] [:x [:2 ["layer_prim" 0]]] [:c [:3 ["layer_prim" 0]]] [:v [:!S6 ["layer_prim" 0]]] [:b [:!S4 ["layer_prim" 0]]] [:n [:!S7 ["layer_prim" 0]]] [:m [:!Shyphen ["layer_prim" 0]]] [:comma [:!Sopen_bracket ["layer_prim" 0]]] [:period [:!Sclose_bracket ["layer_prim" 0]]] [:slash [:!Sgrave_accent_and_tilde ["layer_prim" 0]]] [:return_or_enter [:return_or_enter ["layer_prim" 0]]]]}
    {:des "space > space & shift, rcmd > space & numchar layer"
     :rules [
                 [:spacebar :left_shift nil {:alone [:spacebar]}]
            ]}
    {:des "[ > delete"
     :rules [
                 [:open_bracket :delete_or_backspace [["karabiner_vim" 1] ["vim_mode" 1]]]
                 [:open_bracket :delete_or_backspace ["karabiner_vim" 0]]
            ]}
    {:des "df > synapse panel"
     :rules [
                 [[:d :f] :f10]
            ]}
    {:des "caps > escape / control s (native-vim), held control+option / control (native-vim)",
     :rules [
                 [:caps_lock :!Oleft_control ["karabiner_vim" 1] {:alone [:escape]}]
                 [:caps_lock :left_control ["karabiner_vim" 0] {:alone [:!Ts]}]
                 [:!Ccaps_lock :!Cescape]
                 [[:j :k] :escape ["karabiner_vim" 0]]
            ]}
    {:des "caps + ui > tab switching",
     :rules [[:condis ["karabiner_vim" 1]]
                 [:!TOu [:!TStab]]
                 [:!TOi [:!Ttab]]
            ]}
    {:des "caps + hjkl > emergency arrow keys",
     :rules [[:condis ["karabiner_vim" 1] :!safari]
                 [:!TOh [:left_arrow]]
                 [:!TOj [:down_arrow]]
                 [:!TOk [:up_arrow]]
                 [:!TOl [:right_arrow]]
             [:condis ["karabiner_vim" 0]]
                 [:!Th [:left_arrow]]
                 [:!Tj [:down_arrow]]
                 [:!Tk [:up_arrow]]
                 [:!Tl [:right_arrow]]
            ]}
    ; vim
    ; normal: 0, insert: 1, visual: 2
    {:des "jk / 2xreturn > normal mode",
     :rules [
                 [[:j :k] ["vim_mode" 0] [["karabiner_vim" 1] ["vim_mode" 1]]]
                 [[:j :k] ["vim_mode" 0] [["karabiner_vim" 1] ["vim_mode" 2]]]
                 [[:j :k] :vk_none [["karabiner_vim" 1] ["vim_mode" 0]]]
                 [:return_or_enter [["vim_return_pressed" 0] ["vim_mode" 0]] ["vim_return_pressed" 1]]
                 [:return_or_enter [:return_or_enter ["vim_return_pressed" 1]] ["vim_mode" 1] {:delayed {:invoked ["vim_return_pressed" 0] :canceled ["vim_return_pressed" 0]} :params {:delay 300}}] 
            ]}
    {:des "VIM normal-mode: iIaAoO",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:i ["vim_mode" 1]]
                 [:!Si [:!Cleft_arrow ["vim_mode" 1]]] [:!Ri [:!Cleft_arrow ["vim_mode" 1]]]
                 [:a ["vim_mode" 1]]
                 [:!Sa [:!Cright_arrow ["vim_mode" 1]]] [:!Ra [:!Cright_arrow ["vim_mode" 1]]]
                 [:o [:!Cright_arrow :return_or_enter ["vim_mode" 1]]]
                 [:!So [:!Cleft_arrow :return_or_enter :up_arrow ["vim_mode" 1]]]
            ]}
    {:des "VIM normal-mode: D dd de db d0 d^ d$ dgg dG d{ d}",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:!Sd [:!SCright_arrow :!Cx]] [:!Rd [:!SCright_arrow :!Cx]]
                 ; pressing shift cancels activation of `d_pressed`, therefore we use `d_extend`
                 [:left_shift [:left_shift ["vim_d_extend" 1]] ["vim_d_pressed" 1]{:delayed {:invoked ["vim_d_extend" 0] :canceled ["vim_d_extend" 0]} :params {:delay 300}}]
                 [:right_shift [:right_shift ["vim_d_extend" 1]] ["vim_d_pressed" 1]{:delayed {:invoked ["vim_d_extend" 0] :canceled ["vim_d_extend" 0]} :params {:delay 300}}]
                 [:d [:!Cleft_arrow :!Cleft_arrow :!CSright_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:e [:!SOright_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:b [:!SOleft_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:0 [:!SCleft_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:g [:!CSup_arrow :!Cx ["vim_g_pressed" 0] ["vim_d_extend" 0]] [["vim_g_pressed" 1] ["vim_d_extend" 1]]]
                 ; use of `d_extend` analoge to shift since `d_pressed is canceled by first g
                 [:g [["vim_g_pressed" 1] ["vim_d_extend" 1]] ["vim_d_pressed" 1] {:delayed {:invoked [["vim_g_pressed" 0] ["vim_d_extend" 0]] :canceled [["vim_g_pressed" 0] ["vim_d_extend" 0]]} :params {:delay 300}}] 
                 ; dG doesn't work
                 [:!Sg [:!SCdown_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]] [:!Rg [:!SCdown_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:!Sopen_bracket [:!STa :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]] [:!Ropen_bracket [:!STa :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:!Sclose_bracket [:!STe :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]] [:!Rclose_bracket [:!STe :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:d [["vim_d_pressed" 1]] nil {:delayed {:invoked ["vim_d_pressed" 0] :canceled ["vim_d_pressed" 0]} :params {:delay 300}}] 
            ]}
    {:des "VIM normal-mode: yy ye yb y0 y^ y$ ygg yG y{ y}",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:!Sy [:!SCright_arrow :!Cc]] [:!Ry [:!SCright_arrow :!Cc]]
                 ; pressing shift cancels activation of `y_pressed`, therefore we use `y_extend`
                 [:left_shift [:right_shift ["vim_y_extend" 1]] ["vim_y_pressed" 1]{:delayed {:invoked ["vim_y_extend" 0] :canceled ["vim_y_extend" 0]} :params {:delay 300}}]
                 [:right_shift [:right_shift ["vim_y_extend" 1]] ["vim_y_pressed" 1]{:delayed {:invoked ["vim_y_extend" 0] :canceled ["vim_y_extend" 0]} :params {:delay 300}}]
                 [:y [:!Cleft_arrow :!Cleft_arrow :!CSright_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:e [:!SOright_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:b [:!SOleft_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:0 [:!SCleft_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:g [:!CSup_arrow :!Cc ["vim_g_pressed" 0] ["vim_y_extend" 0]] [["vim_g_pressed" 1] ["vim_y_extend" 1]]]
                 ; use of `y_extend` analoge to shift since `y_pressed is canceled by first g
                 [:g [["vim_g_pressed" 1] ["vim_y_extend" 1]] ["vim_y_pressed" 1] {:delayed {:invoked [["vim_g_pressed" 0] ["vim_y_extend" 0]] :canceled [["vim_g_pressed" 0] ["vim_y_extend" 0]]} :params {:delay 300}}] 
                 ; yG doesn't work
                 [:!Sg [:!SCdown_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]] [:!Rg [:!SCdown_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:!Sopen_bracket [:!STa :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]] [:!Ropen_bracket [:!STa :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:!Sclose_bracket [:!STe :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]] [:!Rclose_bracket [:!STe :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:y [["vim_y_pressed" 1]] nil {:delayed {:invoked ["vim_y_pressed" 0] :canceled ["vim_y_pressed" 0]} :params {:delay 300}}] 
            ]}
    {:des "VIM normal-mode: cc ce cb c0 c^ c$ cgg cG c{ c}",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:!Sc [:!SCright_arrow :!Cx ["vim_mode" 1]]] [:!Rc [:!SCright_arrow :!Cx ["vim_mode" 1]]]
                 ; pressing shift cancels activation of `c_pressed`, therefore we use `c_extend`
                 [:left_shift [:left_shift ["vim_c_extend" 1]] ["vim_c_pressed" 1]{:delayed {:invoked ["vim_c_extend" 0] :canceled ["vim_c_extend" 0]} :params {:delay 300}}]
                 [:right_shift [:right_shift ["vim_c_extend" 1]] ["vim_c_pressed" 1]{:delayed {:invoked ["vim_c_extend" 0] :canceled ["vim_c_extend" 0]} :params {:delay 300}}]
                 [:c [:!Cleft_arrow :!Cleft_arrow :!CSright_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:e [:!SOright_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:b [:!SOleft_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:0 [:!SCleft_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:g [:!CSup_arrow :!Cx ["vim_mode" 1] ["vim_g_pressed" 0] ["vim_c_extend" 0]] [["vim_g_pressed" 1] ["vim_c_extend" 1]]]
                 ; use of `c_extend` analoge to shift since `c_pressed is canceled by first g
                 [:g [["vim_g_pressed" 1] ["vim_c_extend" 1]] ["vim_c_pressed" 1] {:delayed {:invoked [["vim_g_pressed" 0] ["vim_c_extend" 0]] :canceled [["vim_g_pressed" 0] ["vim_c_extend" 0]]} :params {:delay 300}}] 
                 ; cG doesn't work
                 [:!Sg [:!SCdown_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_extend" 1]] [:!Rg [:!SCdown_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:!Sopen_bracket [:!STa :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]] [:!Ropen_bracket [:!STa :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:!Sclose_bracket [:!STe :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]] [:!Rclose_bracket [:!STe :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:c [["vim_c_pressed" 1]] nil {:delayed {:invoked ["vim_c_pressed" 0] :canceled ["vim_c_pressed" 0]} :params {:delay 300}}] 
            ]}
    {:des "VIM normal-mode: hjkl eb 0^$ gg G { }",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:h :left_arrow]
                 [:j :down_arrow]
                 [:k :up_arrow]
                 [:l :right_arrow]
                 [:e :!Oright_arrow]
                 [:b :!Oleft_arrow]
                 [:0 :!Cleft_arrow]
                 [:!S6 :!Cleft_arrow] [:!R6 :!Cleft_arrow]
                 [:!S4 :!Cright_arrow] [:!R4 :!Cright_arrow]
                 [:g [:!Cup_arrow ["vim_g_pressed" 0]] ["vim_g_pressed" 1]]
                 [:g [["vim_g_pressed" 1]] nil {:delayed {:invoked ["vim_g_pressed" 0] :canceled ["vim_g_pressed" 0]} :params {:delay 300}}] 
                 [:!Sg :!Cdown_arrow] [:!Rg :!Cdown_arrow]
                 [:!Sopen_bracket :!Ta] [:!Ropen_bracket :!Ta]
                 [:!Sclose_bracket :!Te] [:!Rclose_bracket :!Te]
            ]}
    {:des "VIM normal-mode: v, visual-mode:  eb 0^$ gg G {} dycx",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:v ["vim_mode" 2]]
             [:condis ["karabiner_vim" 1] ["vim_mode" 2]]
                 [:h :!Sleft_arrow]
                 [:j :!Sdown_arrow]
                 [:k :!Sup_arrow]
                 [:l :!Sright_arrow]
                 [:e :!SOright_arrow]
                 [:b :!SOleft_arrow]
                 [:0 :!SCleft_arrow]
                 [:!S6 :!SCleft_arrow] [:!R6 :!CSleft_arrow]
                 [:!S4 :!SCright_arrow] [:!R4 :!SCright_arrow]
                 [:g [:!SCup_arrow ["vim_g_pressed" 0]] ["vim_g_pressed" 1]]
                 [:g [["vim_g_pressed" 1]] nil {:delayed {:invoked ["vim_g_pressed" 0] :canceled ["vim_g_pressed" 0]} :params {:delay 300}}] 
                 [:!Sg :!SCdown_arrow] [:!Rg :!SCdown_arrow]
                 [:!Sopen_bracket :!STa] [:!Ropen_bracket :!STa]
                 [:!Sclose_bracket :!STe] [:!Rclose_bracket :!STe]
                 [:d [:!Cx ["vim_mode" 0]]]
                 [:y [:!Cc ["vim_mode" 0]]]
                 [:c [:!Cx ["vim_mode" 1]]]
                 [:x [:delete_or_backspace ["vim_mode" 0]]]
            ]}
    {:des "VIM normal-mode: xX p u C-r",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:x :delete_forward]
                 [:!Sx :delete_or_backspace] [:!Rx :delete_or_backspace]
                 [:p :!Cv]
                 [:u :!Cz]
                 [:!TOr :!SCz]
            ]}
    {:des "VIM normal-mode: /nN ?",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:slash [:!Cf ["vim_mode" 1]]]
                 [:n :!Cg]
                 [:!Sn :!SCg]
                 [:!Sslash [:!CSslash ["vim_mode" 1]]] [:!Rslash [:!CSslash ["vim_mode" 1]]]
            ]}
    ; path typing helpers
    {:des "path typing helpers",
     :rules [
                 [:!Tperiod [:period :slash]]
                 [:!Tcomma [:!Sgrave_accent_and_tilde :slash :!Shyphen]]
            ]}
    ; safari
    {:des "safari VIM normal-mode: . > cmd+l + insert-mode, t > cmd+t + insert-mode",
     :rules [[:condis :safari]
                 [:!TOh :!Copen_bracket]
                 [:!TOl :!Cclose_bracket]
             [:condis :safari ["vim_mode" 0]]
                 [:period [:!Cl ["vim_mode" 1]]]
                 [:t [:!Ct ["vim_mode" 1]]]
            ]}
    ; vim normal mode disable keys
    ; {:des "VIM: disable unused keys",
    ;  :rules [["karabiner_vim" 1]
    ;              [:##left_shift :left_shift] [:##right_shift :right_shift]
    ;              [:##left_control :left_control] 
    ;              [:##left_option :left_option] [:##right_option :right_option] 
    ;              [:##left_command :left_command] [:##right_command :right_command] 
    ;              [:##spacebar :spacebar]
    ;              [:return_or_enter :return_or_enter]
    ;              [{:any :key_code} :vk_none ["vim_mode" 0]]
    ;              [{:any :key_code} :vk_none ["vim_mode" 2]]
    ;         ]}
    ; languages
    {:des "spanish (alt) and german (cmd) special chars",
     :rules [[:condis ["karabiner_vim" 1]]
                 ; spanish (option)
                 [:n [:!On :n ["spech_esp" 0]] ["spech_esp" 1]]    [:!Sn [:!On :!Sn ["spech_esp" 0]] ["spech_esp" 1]]    [:!Rn [:!On :!Rn ["spech_esp" 0]] ["spech_esp" 1]]
                 [:a [:!Oe :a ["spech_esp" 0]] ["spech_esp" 1]]    [:!Sa [:!Oe :!Sa ["spech_esp" 0]] ["spech_esp" 1]]    [:!Ra [:!Oe :!Ra ["spech_esp" 0]] ["spech_esp" 1]]
                 [:e [:!Oe :e ["spech_esp" 0]] ["spech_esp" 1]]    [:!Se [:!Oe :!Se ["spech_esp" 0]] ["spech_esp" 1]]    [:!Re [:!Oe :!Re ["spech_esp" 0]] ["spech_esp" 1]]
                 [:i [:!Oe :i ["spech_esp" 0]] ["spech_esp" 1]]    [:!Si [:!Oe :!Si ["spech_esp" 0]] ["spech_esp" 1]]    [:!Ri [:!Oe :!Ri ["spech_esp" 0]] ["spech_esp" 1]]
                 [:o [:!Oe :o ["spech_esp" 0]] ["spech_esp" 1]]    [:!So [:!Oe :!So ["spech_esp" 0]] ["spech_esp" 1]]    [:!Ro [:!Oe :!Ro ["spech_esp" 0]] ["spech_esp" 1]]
                 [:u [:!Oe :u ["spech_esp" 0]] ["spech_esp" 1]]    [:!Su [:!Oe :!Su ["spech_esp" 0]] ["spech_esp" 1]]    [:!Ru [:!Oe :!Ru ["spech_esp" 0]] ["spech_esp" 1]]
                 [:!S1 [:!O1 ["spech_esp" 0]] ["spech_esp" 1]]    [:!Sslash [:!OSslash ["spech_esp" 0]] ["spech_esp" 1]]
                 [:left_option :left_option ["karabiner_vim" 1] {:alone [["spech_esp" 1]] :delayed {:invoked ["spech_esp" 0]} :params {:delay 500}}] 
                 [:right_option :right_option ["karabiner_vim" 1] {:alone [["spech_esp" 1]] :delayed {:invoked ["spech_esp" 0]} :params {:delay 500}}] 
                 ; german (command)
                 [:s [:!Os ["spech_ger" 0]] ["spech_ger" 1]]
                 [:a [:!Ou :a ["spech_ger" 0]] ["spech_ger" 1]]    [:!Sa [:!Ou :!Sa ["spech_ger" 0]] ["spech_ger" 1]]    [:!Ra [:!Ou :!Ra ["spech_ger" 0]] ["spech_ger" 1]]
                 [:o [:!Ou :o ["spech_ger" 0]] ["spech_ger" 1]]    [:!So [:!Ou :!So ["spech_ger" 0]] ["spech_ger" 1]]    [:!Ro [:!Ou :!Ro ["spech_ger" 0]] ["spech_ger" 1]]
                 [:u [:!Ou :u ["spech_ger" 0]] ["spech_ger" 1]]    [:!Su [:!Ou :!Su ["spech_ger" 0]] ["spech_ger" 1]]    [:!Ru [:!Ou :!Ru ["spech_ger" 0]] ["spech_ger" 1]]
                 [:left_command :left_command ["karabiner_vim" 1] {:alone [["spech_ger" 1]] :delayed {:invoked ["spech_ger" 0]} :params {:delay 500}}] 
                 [:right_command :right_command ["karabiner_vim" 1] {:alone [["spech_ger" 1]] :delayed {:invoked ["spech_ger" 0]} :params {:delay 500}}] 
             [:condis ["karabiner_vim" 0]]
                 ; spanish (option)
                 [:left_option :left_option ["karabiner_vim" 0] {:alone [:f1]}]
                 [:right_option :right_option ["karabiner_vim" 0] {:alone [:f1]}]
                 ; german (command)
                 [:left_command :left_command ["karabiner_vim" 0] {:alone [:f2]}]
                 [:right_command :right_command ["karabiner_vim" 0] {:alone [:f2]}]
            ]}
  ]
}

