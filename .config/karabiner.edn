; todo
; - fix dG yG cG by disabling cancel

{
  :profiles {
    :goku {
      :default true
      :alone   300  ; hold for .. ms to register single tap
      :held    50  ; not sure what it's for
      :delay   0   ; time after which the key press is delayed
      :sim     50}} ; keys need to be pressed within this threshold to be considered simultaneous

  :templates {
    :open "open -a \"%s.app\""
    :delay-set-var "sleep 0.1 && /Library/Application\\ Support/org.pqrs/Karabiner-Elements/bin/karabiner_cli --set-variables '{\"%s\": %d}'"}

  :applications {
    :native-vim ["^com\\.googlecode\\.iterm2$", "^com\\.microsoft\\.VSCode$", "^com\\.apple\\.dt\\.Xcode$", "^net\\.kovidgoyal\\.kitty$"]
    :kitty ["^net\\.kovidgoyal\\.kitty$"]
    :iterm ["^com\\.googlecode\\.iterm2$"]
    :vscode ["^com\\.microsoft\\.VSCode$"]
    :safari ["^com\\.apple\\.Safari$"]}

  :simlayers {
    :char-l {:key :a} :char-r {:key :semicolon}
    :ctrl-l {:key :q} :ctrl-r {:key :p}
    :numbers {:key :z}
    :gui {:key :slash}}

  :main [
    {:des "thumb keys" :rules [
       ; used by mac and corne
       [:spacebar :left_shift nil {:alone [:spacebar]}]
       [:right_command :right_command nil {:alone :return_or_enter}]
       [:left_option :left_option ["language" 0] {:alone [["language" 1]] :delayed {:invoked ["language" 0]} :params {:delay 500}}]
       [:left_option :left_option ["language" 1] {:alone [["language" 2]] :delayed {:invoked ["language" 0]} :params {:delay 500}}]
       ; used by mac only
       [:left_command :left_command nil {:alone :delete_or_backspace}]
       ; used by corne only
       [:right_option :left_command nil {:alone [:tab]}]]}

    {:des "sd > tab, df > backspace, jk > escape, kl > return" :rules [
       [[:s :d] :tab]
       [[:d :f] :delete_or_backspace]
       [[:j :k] :escape ["karabiner_vim" 0]]
       [[:j :k] :escape [["karabiner_vim" 1] ["vim_mode" 0]]]
       [[:j :k] ["vim_mode" 0] [["karabiner_vim" 1] ["vim_mode" 1]]]
       [[:j :k] ["vim_mode" 0] [["karabiner_vim" 1] ["vim_mode" 2]]]
       [[:k :l] :return_or_enter]]}

    {:des "character layer" :rules [
       :char-l
         ; upper row
         [:q :vk_none] [:w :!Sgrave_accent_and_tilde] [:e :grave_accent_and_tilde] [:r :!S6] [:t :!S4]
         [:y :!S3] [:u :!S8] [:i :open_bracket] [:o :close_bracket] [:p :vk_none]
         ; home row
         [:s :!Squote] [:d :quote] [:f :!Sbackslash] [:g :backslash]
         [:h :!S5] [:j :hyphen] [:k :!S9] [:l :!S0]
         ; bottom row
         [:z :vk_none] [:x :!Sequal_sign] [:c :equal_sign] [:v :!S1] [:b :!S2]
         [:n :!S7] [:m :!Shyphen] [:comma :!Sopen_bracket] [:period :!Sclose_bracket] [:slash :vk_none]
       :char-r
         ; upper row
         [:q :vk_none] [:w :!Sgrave_accent_and_tilde] [:e :grave_accent_and_tilde] [:r :!S6] [:t :!S4]
         [:y :!S3] [:u :!S8] [:i :open_bracket] [:o :close_bracket] [:p :vk_none]
         ; home row
         [:s :!Squote] [:d :quote] [:f :!Sbackslash] [:g :backslash]
         [:h :!S5] [:j :hyphen] [:k :!S9] [:l :!S0]
         ; bottom row
         [:z :vk_none] [:x :!Sequal_sign] [:c :equal_sign] [:v :!S1] [:b :!S2]
         [:n :!S7] [:m :!Shyphen] [:comma :!Sopen_bracket] [:period :!Sclose_bracket] [:slash :vk_none]]}

    {:des "number layer" :rules [
       :numbers
         ; upper row
         [:q :vk_none] [:w :vk_none] [:e :vk_none] [:r :vk_none] [:t :vk_none]
         [:y :vk_none] [:u :7] [:i :8] [:o :9] [:p :vk_none]
         ; home row
         [:a :vk_none] [:s :vk_none] [:d :vk_none] [:f :vk_none] [:g :vk_none]
         [:h :vk_none] [:j :4] [:k :5] [:l :6] [:semicolon :vk_none]
         ; bottom row
         [:x :vk_none] [:c :vk_none] [:v :vk_none] [:b :vk_none]
         [:n :0] [:m :1] [:comma :2] [:period :3] [:slash :vk_none]]}

    {:des "gui layer" :rules [
       :gui
         ; upper row
         [:q :!Cq] [:w :!Cw] [:e :vk_none] [:r :vk_none] [:t :vk_none]
         [:y :vk_none] [:u :vk_none] [:i :vk_none] [:o :vk_none] [:p :vk_none]
         ; home row
         [:a :vk_none] [:s :!Copen_bracket] [:d [:open "kitty"] :!kitty] [:d "~/.bin/hide-kitty" :kitty] [:f :f10] [:g :!Cclose_bracket]
         [:h :vk_none] [:j :vk_none] [:k :vk_none] [:l :vk_none] [:semicolon :vk_none]
         ; bottom row
         [:z :vk_none] [:x :vk_none] [:c :vk_none] [:v :vk_none] [:b :vk_none]
         [:n :vk_none] [:m :vk_none] [:comma :vk_none] [:period :vk_none]]}

    {:des "extended control layer" :rules [
       :ctrl-l
         ; upper row
         [:w :!Tw] [:e :!Te] [:r :!Tr] [:t :!Tt]
         [:y :!Ty] [:u :!Tu] [:i :tab] [:o :!To] [:p :!Tp]
         ; home row
         [:a :!Ta] [:s :!Ts] [:d :!Td] [:f :!Tf] [:g :!Tg]
         [:h :left_arrow] [:j :down_arrow] [:k :up_arrow] [:l :right_arrow]
         ; bottom row
         [:z :!Tz] [:x :!Tx] [:c :!Tc] [:v :!Tv] [:b :!Tb]
         [:n :!Tn] [:m :return_or_enter] [:comma :!TStab] [:period :!Ttab] [:slash [:!Sgrave_accent_and_tilde :slash :!Shyphen]]
       :ctrl-r
         ; upper row
         [:q :!Tq][:w :!Tw] [:e :!Te] [:r :!Tr] [:t :!Tt]
         [:y :!Ty] [:u :!Tu] [:i :tab] [:o :!To]
         ; home row
         [:a :!Ta] [:s :!Ts] [:d :!Td] [:f :!Tf] [:g :!Tg]
         [:h :left_arrow] [:j :down_arrow] [:k :up_arrow] [:l :right_arrow]
         ; bottom row
         [:z :!Tz] [:x :!Tx] [:c :!Tc] [:v :!Tv] [:b :!Tb]
         [:n :!Tn] [:m :return_or_enter] [:comma :!TStab] [:period :!Ttab] [:slash [:!Sgrave_accent_and_tilde :slash :!Shyphen]]]}

    {:des "language character layers" :rules [
      ; german (command)
      [:condis ["language" 1]]
        [:s [:!Os ["language" 0]]]
        [:a [:!Ou :a ["language" 0]]]   [:!Sa [:!Ou :!Sa ["language" 0]]]
        [:o [:!Ou :o ["language" 0]]]   [:!So [:!Ou :!So ["language" 0]]]
        [:u [:!Ou :u ["language" 0]]]   [:!Su [:!Ou :!Su ["language" 0]]]
      ; spanish
      [:condis ["language" 2]]
        [:n [:!On :n ["language" 0]]]   [:!Sn [:!On :!Sn ["language" 0]]]
        [:a [:!Oe :a ["language" 0]]]   [:!Sa [:!Oe :!Sa ["language" 0]]]
        [:e [:!Oe :e ["language" 0]]]   [:!Se [:!Oe :!Se ["language" 0]]]
        [:i [:!Oe :i ["language" 0]]]   [:!Si [:!Oe :!Si ["language" 0]]]
        [:o [:!Oe :o ["language" 0]]]   [:!So [:!Oe :!So ["language" 0]]]
        [:u [:!Oe :u ["language" 0]]]   [:!Su [:!Oe :!Su ["language" 0]]]]}

    {:des "caps > escape / control s (native-vim), held control+option / control (native-vim)" :rules [
       [:caps_lock :!Oleft_control ["karabiner_vim" 1] {:alone [:escape]}]
       [:caps_lock :left_control ["karabiner_vim" 0] {:alone [:!Ts]}]
       [:!Ccaps_lock :!Cescape]]}
    
    ; vim
    ; normal: 0, insert: 1, visual: 2
    {:des "VIM normal-mode: iIaAoO",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:i ["vim_mode" 1]]
                 [:!Si [:!Cleft_arrow ["vim_mode" 1]]] [:!Ri [:!Cleft_arrow ["vim_mode" 1]]]
                 [:a ["vim_mode" 1]]
                 [:!Sa [:!Cright_arrow ["vim_mode" 1]]] [:!Ra [:!Cright_arrow ["vim_mode" 1]]]
                 [:o [:!Cright_arrow :return_or_enter ["vim_mode" 1]]]
                 [:!So [:!Cleft_arrow :return_or_enter :up_arrow ["vim_mode" 1]]]]}

    {:des "VIM normal-mode: D dd de db d0 d^ d$ dgg dG d{ d}",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:!Sd [:!SCright_arrow :!Cx]] [:!Rd [:!SCright_arrow :!Cx]]
                 ; pressing shift cancels activation of `d_pressed`, therefore we use `d_extend`
                 [:left_shift [:left_shift ["vim_d_extend" 1]] ["vim_d_pressed" 1]{:delayed {:invoked ["vim_d_extend" 0] :canceled ["vim_d_extend" 0]} :params {:delay 300}}]
                 [:right_shift [:right_shift ["vim_d_extend" 1]] ["vim_d_pressed" 1]{:delayed {:invoked ["vim_d_extend" 0] :canceled ["vim_d_extend" 0]} :params {:delay 300}}]
                 [:d [:!Cleft_arrow :!Cleft_arrow :!CSright_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:e [:!SOright_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:b [:!SOleft_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:0 [:!SCleft_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:g [:!CSup_arrow :!Cx ["vim_g_pressed" 0] ["vim_d_extend" 0]] [["vim_g_pressed" 1] ["vim_d_extend" 1]]]
                 ; use of `d_extend` analoge to shift since `d_pressed is canceled by first g
                 [:g [["vim_g_pressed" 1] ["vim_d_extend" 1]] ["vim_d_pressed" 1] {:delayed {:invoked [["vim_g_pressed" 0] ["vim_d_extend" 0]] :canceled [["vim_g_pressed" 0] ["vim_d_extend" 0]]} :params {:delay 300}}] 
                 ; dG doesn't work
                 [:!Sg [:!SCdown_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]] [:!Rg [:!SCdown_arrow :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:!Sopen_bracket [:!STa :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]] [:!Ropen_bracket [:!STa :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:!Sclose_bracket [:!STe :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]] [:!Rclose_bracket [:!STe :!Cx ["vim_d_pressed" 0]] ["vim_d_pressed" 1]]
                 [:d [["vim_d_pressed" 1]] nil {:delayed {:invoked ["vim_d_pressed" 0] :canceled ["vim_d_pressed" 0]} :params {:delay 300}}]]}

    {:des "VIM normal-mode: yy ye yb y0 y^ y$ ygg yG y{ y}",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:!Sy [:!SCright_arrow :!Cc]] [:!Ry [:!SCright_arrow :!Cc]]
                 ; pressing shift cancels activation of `y_pressed`, therefore we use `y_extend`
                 [:left_shift [:right_shift ["vim_y_extend" 1]] ["vim_y_pressed" 1]{:delayed {:invoked ["vim_y_extend" 0] :canceled ["vim_y_extend" 0]} :params {:delay 300}}]
                 [:right_shift [:right_shift ["vim_y_extend" 1]] ["vim_y_pressed" 1]{:delayed {:invoked ["vim_y_extend" 0] :canceled ["vim_y_extend" 0]} :params {:delay 300}}]
                 [:y [:!Cleft_arrow :!Cleft_arrow :!CSright_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:e [:!SOright_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:b [:!SOleft_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:0 [:!SCleft_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:g [:!CSup_arrow :!Cc ["vim_g_pressed" 0] ["vim_y_extend" 0]] [["vim_g_pressed" 1] ["vim_y_extend" 1]]]
                 ; use of `y_extend` analoge to shift since `y_pressed is canceled by first g
                 [:g [["vim_g_pressed" 1] ["vim_y_extend" 1]] ["vim_y_pressed" 1] {:delayed {:invoked [["vim_g_pressed" 0] ["vim_y_extend" 0]] :canceled [["vim_g_pressed" 0] ["vim_y_extend" 0]]} :params {:delay 300}}] 
                 ; yG doesn't work
                 [:!Sg [:!SCdown_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]] [:!Rg [:!SCdown_arrow :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:!Sopen_bracket [:!STa :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]] [:!Ropen_bracket [:!STa :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:!Sclose_bracket [:!STe :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]] [:!Rclose_bracket [:!STe :!Cc ["vim_y_pressed" 0]] ["vim_y_pressed" 1]]
                 [:y [["vim_y_pressed" 1]] nil {:delayed {:invoked ["vim_y_pressed" 0] :canceled ["vim_y_pressed" 0]} :params {:delay 300}}]]}

    {:des "VIM normal-mode: cc ce cb c0 c^ c$ cgg cG c{ c}",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:!Sc [:!SCright_arrow :!Cx ["vim_mode" 1]]] [:!Rc [:!SCright_arrow :!Cx ["vim_mode" 1]]]
                 ; pressing shift cancels activation of `c_pressed`, therefore we use `c_extend`
                 [:left_shift [:left_shift ["vim_c_extend" 1]] ["vim_c_pressed" 1]{:delayed {:invoked ["vim_c_extend" 0] :canceled ["vim_c_extend" 0]} :params {:delay 300}}]
                 [:right_shift [:right_shift ["vim_c_extend" 1]] ["vim_c_pressed" 1]{:delayed {:invoked ["vim_c_extend" 0] :canceled ["vim_c_extend" 0]} :params {:delay 300}}]
                 [:c [:!Cleft_arrow :!Cleft_arrow :!CSright_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:e [:!SOright_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:b [:!SOleft_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:0 [:!SCleft_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:g [:!CSup_arrow :!Cx ["vim_mode" 1] ["vim_g_pressed" 0] ["vim_c_extend" 0]] [["vim_g_pressed" 1] ["vim_c_extend" 1]]]
                 ; use of `c_extend` analoge to shift since `c_pressed is canceled by first g
                 [:g [["vim_g_pressed" 1] ["vim_c_extend" 1]] ["vim_c_pressed" 1] {:delayed {:invoked [["vim_g_pressed" 0] ["vim_c_extend" 0]] :canceled [["vim_g_pressed" 0] ["vim_c_extend" 0]]} :params {:delay 300}}] 
                 ; cG doesn't work
                 [:!Sg [:!SCdown_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_extend" 1]] [:!Rg [:!SCdown_arrow :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:!Sopen_bracket [:!STa :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]] [:!Ropen_bracket [:!STa :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:!Sclose_bracket [:!STe :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]] [:!Rclose_bracket [:!STe :!Cx ["vim_mode" 1] ["vim_c_pressed" 0]] ["vim_c_pressed" 1]]
                 [:c [["vim_c_pressed" 1]] nil {:delayed {:invoked ["vim_c_pressed" 0] :canceled ["vim_c_pressed" 0]} :params {:delay 300}}]]}

    {:des "VIM normal-mode: hjkl eb 0^$ gg G { }",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:h :left_arrow]
                 [:j :down_arrow]
                 [:k :up_arrow]
                 [:l :right_arrow]
                 [:e :!Oright_arrow]
                 [:b :!Oleft_arrow]
                 [:0 :!Cleft_arrow]
                 [:!S6 :!Cleft_arrow] [:!R6 :!Cleft_arrow]
                 [:!S4 :!Cright_arrow] [:!R4 :!Cright_arrow]
                 [:g [:!Cup_arrow ["vim_g_pressed" 0]] ["vim_g_pressed" 1]]
                 [:g [["vim_g_pressed" 1]] nil {:delayed {:invoked ["vim_g_pressed" 0] :canceled ["vim_g_pressed" 0]} :params {:delay 300}}] 
                 [:!Sg :!Cdown_arrow] [:!Rg :!Cdown_arrow]
                 [:!Sopen_bracket :!Ta] [:!Ropen_bracket :!Ta]
                 [:!Sclose_bracket :!Te] [:!Rclose_bracket :!Te]]}

    {:des "VIM normal-mode: v, visual-mode:  eb 0^$ gg G {} dycx",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:v ["vim_mode" 2]]
             [:condis ["karabiner_vim" 1] ["vim_mode" 2]]
                 [:h :!Sleft_arrow]
                 [:j :!Sdown_arrow]
                 [:k :!Sup_arrow]
                 [:l :!Sright_arrow]
                 [:e :!SOright_arrow]
                 [:b :!SOleft_arrow]
                 [:0 :!SCleft_arrow]
                 [:!S6 :!SCleft_arrow] [:!R6 :!CSleft_arrow]
                 [:!S4 :!SCright_arrow] [:!R4 :!SCright_arrow]
                 [:g [:!SCup_arrow ["vim_g_pressed" 0]] ["vim_g_pressed" 1]]
                 [:g [["vim_g_pressed" 1]] nil {:delayed {:invoked ["vim_g_pressed" 0] :canceled ["vim_g_pressed" 0]} :params {:delay 300}}] 
                 [:!Sg :!SCdown_arrow] [:!Rg :!SCdown_arrow]
                 [:!Sopen_bracket :!STa] [:!Ropen_bracket :!STa]
                 [:!Sclose_bracket :!STe] [:!Rclose_bracket :!STe]
                 [:d [:!Cx ["vim_mode" 0]]]
                 [:y [:!Cc ["vim_mode" 0]]]
                 [:c [:!Cx ["vim_mode" 1]]]
                 [:x [:delete_or_backspace ["vim_mode" 0]]]]}

    {:des "VIM normal-mode: xX p u C-r",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:x :delete_forward]
                 [:!Sx :delete_or_backspace] [:!Rx :delete_or_backspace]
                 [:p :!Cv]
                 [:u :!Cz]
                 [:!TOr :!SCz]]}

    {:des "VIM normal-mode: /nN ?",
     :rules [[:condis ["karabiner_vim" 1] ["vim_mode" 0]]
                 [:slash [:!Cf ["vim_mode" 1]]]
                 [:n :!Cg]
                 [:!Sn :!SCg]
                 [:!Sslash [:!CSslash ["vim_mode" 1]]] [:!Rslash [:!CSslash ["vim_mode" 1]]]]}

    ; safari
    {:des "safari VIM normal-mode: . > cmd+l + insert-mode, t > cmd+t + insert-mode",
     :rules [[:condis :safari ["vim_mode" 0]]
                 [:period [:!Cl ["vim_mode" 1]]]
                 [:t [:!Ct ["vim_mode" 1]]]]}
  ]
}
